syntax = "proto3";

option go_package = "github.com/s7techlab/hyperledger-fabric-samples/samples/token/service/burnable";
package examples.erc20_service.service.balance;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "mwitkow/go-proto-validators/validator.proto";

// Burnable balance
service BurnableService {

  rpc Burn (BurnRequest) returns (BurnResponse) {
    option (google.api.http) = {
      post: "/burn"
    };
  }
}

message BurnRequest  {
  string address = 1 [(validator.field) = {string_not_empty : true}];
  string symbol = 2 [(validator.field) = {string_not_empty : true}];
  repeated string group = 3;
  uint64 amount = 4 [(validator.field) = {int_gt: 0}];
}

message BurnResponse {
  string address = 1;
  string symbol = 2;
  repeated string group = 3;
  uint64 amount = 4;
}

// Burned event is emitted when Transfer method has been invoked
message Burned {
  string address = 1;
  string symbol = 2;
  repeated string group = 3;
  uint64 amount = 4;
}