// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: token/service/balance/balance.proto

package balance

import (
	context "context"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationType int32

const (
	OperationType_OPERATION_UNKNOWN  OperationType = 0
	OperationType_OPERATION_TRANSFER OperationType = 1
	OperationType_OPERATION_MINT     OperationType = 2
	OperationType_OPERATION_BURN     OperationType = 3
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "OPERATION_UNKNOWN",
		1: "OPERATION_TRANSFER",
		2: "OPERATION_MINT",
		3: "OPERATION_BURN",
	}
	OperationType_value = map[string]int32{
		"OPERATION_UNKNOWN":  0,
		"OPERATION_TRANSFER": 1,
		"OPERATION_MINT":     2,
		"OPERATION_BURN":     3,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_token_service_balance_balance_proto_enumTypes[0].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_token_service_balance_balance_proto_enumTypes[0]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{0}
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipient string            `protobuf:"bytes,1,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Symbol    string            `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group     []string          `protobuf:"bytes,3,rep,name=group,proto3" json:"group,omitempty"`
	Amount    uint64            `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta      []*AddMetaRequest `protobuf:"bytes,5,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{0}
}

func (x *TransferRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *TransferRequest) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransferRequest) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *TransferRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferRequest) GetMeta() []*AddMetaRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Symbol    string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group     []string `protobuf:"bytes,4,rep,name=group,proto3" json:"group,omitempty"`
	Amount    uint64   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta      []*Meta  `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{1}
}

func (x *TransferResponse) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *TransferResponse) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *TransferResponse) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransferResponse) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *TransferResponse) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferResponse) GetMeta() []*Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Identifier: Balance
type BalanceId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group   []string `protobuf:"bytes,3,rep,name=group,proto3" json:"group,omitempty"`
}

func (x *BalanceId) Reset() {
	*x = BalanceId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceId) ProtoMessage() {}

func (x *BalanceId) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceId.ProtoReflect.Descriptor instead.
func (*BalanceId) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{2}
}

func (x *BalanceId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BalanceId) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BalanceId) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

// State: Balance
type Balance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group   []string `protobuf:"bytes,3,rep,name=group,proto3" json:"group,omitempty"`
	Amount  uint64   `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Balance) Reset() {
	*x = Balance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balance) ProtoMessage() {}

func (x *Balance) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balance.ProtoReflect.Descriptor instead.
func (*Balance) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{3}
}

func (x *Balance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Balance) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Balance) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Balance) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

// List: balances
type Balances struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Balance `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Balances) Reset() {
	*x = Balances{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Balances) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Balances) ProtoMessage() {}

func (x *Balances) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Balances.ProtoReflect.Descriptor instead.
func (*Balances) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{4}
}

func (x *Balances) GetItems() []*Balance {
	if x != nil {
		return x.Items
	}
	return nil
}

type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string        `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string        `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Symbol    string        `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group     []string      `protobuf:"bytes,4,rep,name=group,proto3" json:"group,omitempty"`
	Amount    uint64        `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Type      OperationType `protobuf:"varint,6,opt,name=type,proto3,enum=examples.erc20_service.service.balance.OperationType" json:"type,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{5}
}

func (x *Operation) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Operation) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Operation) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Operation) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Operation) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Operation) GetType() OperationType {
	if x != nil {
		return x.Type
	}
	return OperationType_OPERATION_UNKNOWN
}

type TransferOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string            `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string            `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Symbol    string            `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group     []string          `protobuf:"bytes,4,rep,name=group,proto3" json:"group,omitempty"`
	Amount    uint64            `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta      []*AddMetaRequest `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *TransferOperation) Reset() {
	*x = TransferOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOperation) ProtoMessage() {}

func (x *TransferOperation) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOperation.ProtoReflect.Descriptor instead.
func (*TransferOperation) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{6}
}

func (x *TransferOperation) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *TransferOperation) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *TransferOperation) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *TransferOperation) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *TransferOperation) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferOperation) GetMeta() []*AddMetaRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

type BalanceOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string            `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string            `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group   []string          `protobuf:"bytes,3,rep,name=group,proto3" json:"group,omitempty"`
	Amount  uint64            `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta    []*AddMetaRequest `protobuf:"bytes,5,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *BalanceOperation) Reset() {
	*x = BalanceOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceOperation) ProtoMessage() {}

func (x *BalanceOperation) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceOperation.ProtoReflect.Descriptor instead.
func (*BalanceOperation) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceOperation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BalanceOperation) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *BalanceOperation) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *BalanceOperation) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BalanceOperation) GetMeta() []*AddMetaRequest {
	if x != nil {
		return x.Meta
	}
	return nil
}

// Transferred event is emitted when Transfer method has been invoked
type Transferred struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Recipient string   `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Symbol    string   `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group     []string `protobuf:"bytes,4,rep,name=group,proto3" json:"group,omitempty"`
	Amount    uint64   `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta      []*Meta  `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *Transferred) Reset() {
	*x = Transferred{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transferred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transferred) ProtoMessage() {}

func (x *Transferred) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transferred.ProtoReflect.Descriptor instead.
func (*Transferred) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{8}
}

func (x *Transferred) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Transferred) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *Transferred) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Transferred) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *Transferred) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transferred) GetMeta() []*Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type AddMetaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AddMetaRequest) Reset() {
	*x = AddMetaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMetaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMetaRequest) ProtoMessage() {}

func (x *AddMetaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMetaRequest.ProtoReflect.Descriptor instead.
func (*AddMetaRequest) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{9}
}

func (x *AddMetaRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AddMetaRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Meta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Meta) Reset() {
	*x = Meta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Meta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Meta) ProtoMessage() {}

func (x *Meta) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Meta.ProtoReflect.Descriptor instead.
func (*Meta) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{10}
}

func (x *Meta) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Meta) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UTXOId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group   string `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"` // !!!! should be repeated
	TxId    string `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
}

func (x *UTXOId) Reset() {
	*x = UTXOId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOId) ProtoMessage() {}

func (x *UTXOId) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOId.ProtoReflect.Descriptor instead.
func (*UTXOId) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{11}
}

func (x *UTXOId) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UTXOId) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *UTXOId) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UTXOId) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type UTXO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Symbol  string   `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Group   string   `protobuf:"bytes,3,opt,name=group,proto3" json:"group,omitempty"` // !!!! should be repeated
	TxId    string   `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Inputs  []string `protobuf:"bytes,5,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Amount  uint64   `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Meta    []*Meta  `protobuf:"bytes,7,rep,name=meta,proto3" json:"meta,omitempty"`
}

func (x *UTXO) Reset() {
	*x = UTXO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXO) ProtoMessage() {}

func (x *UTXO) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXO.ProtoReflect.Descriptor instead.
func (*UTXO) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{12}
}

func (x *UTXO) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UTXO) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *UTXO) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *UTXO) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *UTXO) GetInputs() []string {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *UTXO) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UTXO) GetMeta() []*Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type UTXOs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UTXO `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UTXOs) Reset() {
	*x = UTXOs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_token_service_balance_balance_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UTXOs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UTXOs) ProtoMessage() {}

func (x *UTXOs) ProtoReflect() protoreflect.Message {
	mi := &file_token_service_balance_balance_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UTXOs.ProtoReflect.Descriptor instead.
func (*UTXOs) Descriptor() ([]byte, []int) {
	return file_token_service_balance_balance_proto_rawDescGZIP(), []int{13}
}

func (x *UTXOs) GetItems() []*UTXO {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_token_service_balance_balance_proto protoreflect.FileDescriptor

var file_token_service_balance_balance_proto_rawDesc = []byte{
	0x0a, 0x23, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x26, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f,
	0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1e, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65,
	0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0xd0, 0x01, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32,
	0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x22, 0x53, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x69, 0x0a, 0x07, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x49, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x35, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xfb, 0x01, 0x0a,
	0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x20, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1e, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1e, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41,
	0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x72, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x40, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x22, 0x48, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x04, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x06, 0x55,
	0x54, 0x58, 0x4f, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x0a,
	0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x49, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x04, 0x55, 0x54, 0x58, 0x4f, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x4b, 0x0a, 0x05, 0x55, 0x54,
	0x58, 0x4f, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72,
	0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x55, 0x54, 0x58, 0x4f,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x66, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x50, 0x45, 0x52,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x16, 0x0a, 0x12, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x52, 0x41,
	0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x52, 0x4e, 0x10, 0x03, 0x32,
	0xe6, 0x04, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xa4, 0x01, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63,
	0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0x2f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x2f, 0x7b, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x7d, 0x2f, 0x7b, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x12, 0x31, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63,
	0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x1a, 0x30, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19,
	0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f,
	0x7b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0x71, 0x0a, 0x0c, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x30, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63,
	0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x99, 0x01, 0x0a,
	0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x37, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72, 0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x38, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x65, 0x72,
	0x63, 0x32, 0x30, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x42, 0x4f, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x37, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62,
	0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2d, 0x66, 0x61, 0x62,
	0x72, 0x69, 0x63, 0x2d, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_token_service_balance_balance_proto_rawDescOnce sync.Once
	file_token_service_balance_balance_proto_rawDescData = file_token_service_balance_balance_proto_rawDesc
)

func file_token_service_balance_balance_proto_rawDescGZIP() []byte {
	file_token_service_balance_balance_proto_rawDescOnce.Do(func() {
		file_token_service_balance_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_token_service_balance_balance_proto_rawDescData)
	})
	return file_token_service_balance_balance_proto_rawDescData
}

var file_token_service_balance_balance_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_token_service_balance_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_token_service_balance_balance_proto_goTypes = []interface{}{
	(OperationType)(0),        // 0: examples.erc20_service.service.balance.OperationType
	(*TransferRequest)(nil),   // 1: examples.erc20_service.service.balance.TransferRequest
	(*TransferResponse)(nil),  // 2: examples.erc20_service.service.balance.TransferResponse
	(*BalanceId)(nil),         // 3: examples.erc20_service.service.balance.BalanceId
	(*Balance)(nil),           // 4: examples.erc20_service.service.balance.Balance
	(*Balances)(nil),          // 5: examples.erc20_service.service.balance.Balances
	(*Operation)(nil),         // 6: examples.erc20_service.service.balance.Operation
	(*TransferOperation)(nil), // 7: examples.erc20_service.service.balance.TransferOperation
	(*BalanceOperation)(nil),  // 8: examples.erc20_service.service.balance.BalanceOperation
	(*Transferred)(nil),       // 9: examples.erc20_service.service.balance.Transferred
	(*AddMetaRequest)(nil),    // 10: examples.erc20_service.service.balance.AddMetaRequest
	(*Meta)(nil),              // 11: examples.erc20_service.service.balance.Meta
	(*UTXOId)(nil),            // 12: examples.erc20_service.service.balance.UTXOId
	(*UTXO)(nil),              // 13: examples.erc20_service.service.balance.UTXO
	(*UTXOs)(nil),             // 14: examples.erc20_service.service.balance.UTXOs
	(*emptypb.Empty)(nil),     // 15: google.protobuf.Empty
}
var file_token_service_balance_balance_proto_depIdxs = []int32{
	10, // 0: examples.erc20_service.service.balance.TransferRequest.meta:type_name -> examples.erc20_service.service.balance.AddMetaRequest
	11, // 1: examples.erc20_service.service.balance.TransferResponse.meta:type_name -> examples.erc20_service.service.balance.Meta
	4,  // 2: examples.erc20_service.service.balance.Balances.items:type_name -> examples.erc20_service.service.balance.Balance
	0,  // 3: examples.erc20_service.service.balance.Operation.type:type_name -> examples.erc20_service.service.balance.OperationType
	10, // 4: examples.erc20_service.service.balance.TransferOperation.meta:type_name -> examples.erc20_service.service.balance.AddMetaRequest
	10, // 5: examples.erc20_service.service.balance.BalanceOperation.meta:type_name -> examples.erc20_service.service.balance.AddMetaRequest
	11, // 6: examples.erc20_service.service.balance.Transferred.meta:type_name -> examples.erc20_service.service.balance.Meta
	11, // 7: examples.erc20_service.service.balance.UTXO.meta:type_name -> examples.erc20_service.service.balance.Meta
	13, // 8: examples.erc20_service.service.balance.UTXOs.items:type_name -> examples.erc20_service.service.balance.UTXO
	3,  // 9: examples.erc20_service.service.balance.BalanceService.GetBalance:input_type -> examples.erc20_service.service.balance.BalanceId
	3,  // 10: examples.erc20_service.service.balance.BalanceService.ListAccountBalances:input_type -> examples.erc20_service.service.balance.BalanceId
	15, // 11: examples.erc20_service.service.balance.BalanceService.ListBalances:input_type -> google.protobuf.Empty
	1,  // 12: examples.erc20_service.service.balance.BalanceService.Transfer:input_type -> examples.erc20_service.service.balance.TransferRequest
	4,  // 13: examples.erc20_service.service.balance.BalanceService.GetBalance:output_type -> examples.erc20_service.service.balance.Balance
	5,  // 14: examples.erc20_service.service.balance.BalanceService.ListAccountBalances:output_type -> examples.erc20_service.service.balance.Balances
	5,  // 15: examples.erc20_service.service.balance.BalanceService.ListBalances:output_type -> examples.erc20_service.service.balance.Balances
	2,  // 16: examples.erc20_service.service.balance.BalanceService.Transfer:output_type -> examples.erc20_service.service.balance.TransferResponse
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_token_service_balance_balance_proto_init() }
func file_token_service_balance_balance_proto_init() {
	if File_token_service_balance_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_token_service_balance_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Balances); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transferred); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMetaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Meta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_token_service_balance_balance_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UTXOs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_token_service_balance_balance_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_token_service_balance_balance_proto_goTypes,
		DependencyIndexes: file_token_service_balance_balance_proto_depIdxs,
		EnumInfos:         file_token_service_balance_balance_proto_enumTypes,
		MessageInfos:      file_token_service_balance_balance_proto_msgTypes,
	}.Build()
	File_token_service_balance_balance_proto = out.File
	file_token_service_balance_balance_proto_rawDesc = nil
	file_token_service_balance_balance_proto_goTypes = nil
	file_token_service_balance_balance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BalanceServiceClient is the client API for BalanceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BalanceServiceClient interface {
	// Returns the amount of tokens owned by account.
	GetBalance(ctx context.Context, in *BalanceId, opts ...grpc.CallOption) (*Balance, error)
	ListAccountBalances(ctx context.Context, in *BalanceId, opts ...grpc.CallOption) (*Balances, error)
	ListBalances(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Balances, error)
	// Moves amount tokens from the caller’s account to recipient.
	// Returns transfer details
	Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error)
}

type balanceServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBalanceServiceClient(cc grpc.ClientConnInterface) BalanceServiceClient {
	return &balanceServiceClient{cc}
}

func (c *balanceServiceClient) GetBalance(ctx context.Context, in *BalanceId, opts ...grpc.CallOption) (*Balance, error) {
	out := new(Balance)
	err := c.cc.Invoke(ctx, "/examples.erc20_service.service.balance.BalanceService/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceServiceClient) ListAccountBalances(ctx context.Context, in *BalanceId, opts ...grpc.CallOption) (*Balances, error) {
	out := new(Balances)
	err := c.cc.Invoke(ctx, "/examples.erc20_service.service.balance.BalanceService/ListAccountBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceServiceClient) ListBalances(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Balances, error) {
	out := new(Balances)
	err := c.cc.Invoke(ctx, "/examples.erc20_service.service.balance.BalanceService/ListBalances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *balanceServiceClient) Transfer(ctx context.Context, in *TransferRequest, opts ...grpc.CallOption) (*TransferResponse, error) {
	out := new(TransferResponse)
	err := c.cc.Invoke(ctx, "/examples.erc20_service.service.balance.BalanceService/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BalanceServiceServer is the server API for BalanceService service.
type BalanceServiceServer interface {
	// Returns the amount of tokens owned by account.
	GetBalance(context.Context, *BalanceId) (*Balance, error)
	ListAccountBalances(context.Context, *BalanceId) (*Balances, error)
	ListBalances(context.Context, *emptypb.Empty) (*Balances, error)
	// Moves amount tokens from the caller’s account to recipient.
	// Returns transfer details
	Transfer(context.Context, *TransferRequest) (*TransferResponse, error)
}

// UnimplementedBalanceServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBalanceServiceServer struct {
}

func (*UnimplementedBalanceServiceServer) GetBalance(context.Context, *BalanceId) (*Balance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedBalanceServiceServer) ListAccountBalances(context.Context, *BalanceId) (*Balances, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAccountBalances not implemented")
}
func (*UnimplementedBalanceServiceServer) ListBalances(context.Context, *emptypb.Empty) (*Balances, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListBalances not implemented")
}
func (*UnimplementedBalanceServiceServer) Transfer(context.Context, *TransferRequest) (*TransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}

func RegisterBalanceServiceServer(s *grpc.Server, srv BalanceServiceServer) {
	s.RegisterService(&_BalanceService_serviceDesc, srv)
}

func _BalanceService_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServiceServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.erc20_service.service.balance.BalanceService/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServiceServer).GetBalance(ctx, req.(*BalanceId))
	}
	return interceptor(ctx, in, info, handler)
}

func _BalanceService_ListAccountBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServiceServer).ListAccountBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.erc20_service.service.balance.BalanceService/ListAccountBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServiceServer).ListAccountBalances(ctx, req.(*BalanceId))
	}
	return interceptor(ctx, in, info, handler)
}

func _BalanceService_ListBalances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServiceServer).ListBalances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.erc20_service.service.balance.BalanceService/ListBalances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServiceServer).ListBalances(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BalanceService_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BalanceServiceServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.erc20_service.service.balance.BalanceService/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BalanceServiceServer).Transfer(ctx, req.(*TransferRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BalanceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examples.erc20_service.service.balance.BalanceService",
	HandlerType: (*BalanceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _BalanceService_GetBalance_Handler,
		},
		{
			MethodName: "ListAccountBalances",
			Handler:    _BalanceService_ListAccountBalances_Handler,
		},
		{
			MethodName: "ListBalances",
			Handler:    _BalanceService_ListBalances_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _BalanceService_Transfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "token/service/balance/balance.proto",
}
